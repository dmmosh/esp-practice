[1/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/esp-practice.cpp.obj
[2/10] Linking C static library esp-idf/main/libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] cd /home/wetsock/coding/esp-practice/build/bootloader/esp-idf/esptool_py && /home/wetsock/.espressif/python_env/idf5.4_py3.13_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/wetsock/coding/esp-practice/build/bootloader/bootloader.bin
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[4/10] No install step for 'bootloader'
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable esp-practice.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/wetsock/coding/esp-practice/build/esp-practice.bin
[9/10] cd /home/wetsock/coding/esp-practice/build/esp-idf/esptool_py && /home/wetsock/.espressif/python_env/idf5.4_py3.13_env/bin/python /opt/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/wetsock/coding/esp-practice/build/partition_table/partition-table.bin /home/wetsock/coding/esp-practice/build/esp-practice.bin
esp-practice.bin binary size 0x2b7d0 bytes. Smallest app partition is 0x100000 bytes. 0xd4830 bytes (83%) free.
[9/10] cd /opt/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/opt/esp-idf -D "SERIAL_TOOL=/home/wetsock/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/opt/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/wetsock/coding/esp-practice/build -P /opt/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 115200 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 esp-practice.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 4c:11:ae:7f:70:ec
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25952 bytes to 16377...
Writing at 0x00001000... (100 %)
Wrote 25952 bytes (16377 compressed) at 0x00001000 in 1.9 seconds (effective 111.6 kbit/s)...
Hash of data verified.
Compressed 178128 bytes to 96925...
Writing at 0x00010000... (16 %)
Writing at 0x0001c34c... (33 %)
Writing at 0x00021e1a... (50 %)
Writing at 0x000279c8... (66 %)
Writing at 0x0002eed5... (83 %)
Writing at 0x00035a43... (100 %)
Wrote 178128 bytes (96925 compressed) at 0x00010000 in 8.9 seconds (effective 160.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 343.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
